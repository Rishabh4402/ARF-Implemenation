library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity controlunit is
Port ( clk:in std_logic;
		 reg1:out std_logic;
		 reg2:out std_logic;
		 reg3:out std_logic;
		 reg4:out std_logic;
		 reg5:out std_logic;
		 reg6:out std_logic;
		 reg7:out std_logic;
		 reg8:out std_logic;
		 muxm1:out std_logic;
		 demux1:out std_logic;
		 muxm3:out std_logic_vector(1 downto 0);
		 demux3:out std_logic_vector(1 downto 0);
		 upperlatch1:out std_logic;
		 upperlatch2:out std_logic;
		 upperlatch3:out std_logic;
		 upperlatch4:out std_logic;
		 timestamp:out std_logic_vector(3 downto 0);
		 lowerlatch1:out std_logic;
		 lowerlatch2:out std_logic;
		 lowerlatch3:out std_logic;
		 lowerlatch4:out std_logic);
end controlunit;
architecture behavioral of controlunit is
signal count: integer range 0 to 14 := 0;
begin
process(clk)
begin
if rising_edge(clk) then
	if count = 0 then
		timestamp <="0000";
		muxm1 <= '0';
		muxm3 <= '00';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '1';
		upperlatch2 <= '1';
		upperlatch3 <= '1';
		upperlatch4 <= '0';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '0';
		count<=(count+1)mod 14;
	elsif count = 1 then
		timestamp <="0001";
		muxm1 <= '1';
		demux1 <= '0';
		demux3 <= '00';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '1';
		upperlatch3 <= '1';
		upperlatch4 <= '1';
		lowerlatch1 <= '1';
		lowerlatch2 <= '1';
		lowerlatch3 <= '1';
		lowerlatch4 <= '0';
		count<=(count+1)mod 14;
	elsif count = 2 then
		timestamp <="0010";
		demux <= '1';
		reg1 <= '1';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '0';
		lowerlatch2 <= '1';
		lowerlatch3 <= '1';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 3 then
		timestamp <="0011";
		reg1 <= '0';
		reg2 <= '1';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 4 then
		timestamp <="0100";
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '1';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 5 then
		timestamp <="0101";
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '1';
		reg4 <= '1';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 6 then
		timestamp <="0110";
		muxm3 <= '01';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '1';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '0';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 7 then
		timestamp <="0111";
		demux3 <= '01';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '1';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '0';
		count<=(count+1)mod 14;
	elsif count = 8 then
		timestamp <="1000";
		muxm3 <= '10';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '1';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '1';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '0';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 9 then
		timestamp <="1001";
		demux3 <= '10';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '1';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '0';
		count<=(count+1)mod 14;
	elsif count = 10 then
		timestamp <="1010";
		muxm3 <= '11';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '1';
		reg8 <= '0';
		upperlatch1 <= '1';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '0';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	elsif count = 11 then
		timestamp <="1011";
		demux3 <= '11';
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '1';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '0';
		count<=(count+1)mod 14;
	elsif count = 12 then
		timestamp <="1100";
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '1';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '1';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	else
		timestamp <="1101";
		reg1 <= '0';
		reg2 <= '0';
		reg3 <= '0';
		reg4 <= '0';
		reg5 <= '0';
		reg6 <= '0';
		reg7 <= '0';
		reg8 <= '0';
		upperlatch1 <= '0';
		upperlatch2 <= '0';
		upperlatch3 <= '0';
		upperlatch4 <= '0';
		lowerlatch1 <= '0';
		lowerlatch2 <= '0';
		lowerlatch3 <= '0';
		lowerlatch4 <= '1';
		count<=(count+1)mod 14;
	end if;
end if;
end process;
end behavioral;