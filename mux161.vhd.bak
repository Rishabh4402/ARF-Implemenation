library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

--  Uncomment the following lines to use the declarations that are
--  provided for instantiating Xilinx primitive components.
--library UNISIM;
--use UNISIM.VComponents.all;

entity mux161 is
    Port ( x0 : in std_logic_vector(15 downto 0);
			  x1 : in std_logic_vector(15 downto 0);
			  x2 : in std_logic_vector(15 downto 0);
			  x3 : in std_logic_vector(15 downto 0);
			  x4 : in std_logic_vector(15 downto 0);
			  x5 : in std_logic_vector(15 downto 0);
			  x6 : in std_logic_vector(15 downto 0);
			  x7 : in std_logic_vector(15 downto 0);
			  x8 : in std_logic_vector(15 downto 0);
			  x9 : in std_logic_vector(15 downto 0);
			  x10 : in std_logic_vector(15 downto 0);
			  x11 : in std_logic_vector(15 downto 0);
			  x12 : in std_logic_vector(15 downto 0);
			  x13 : in std_logic_vector(15 downto 0);
			  x14 : in std_logic_vector(15 downto 0);
			  x15 : in std_logic_vector(15 downto 0);
           s : in std_logic_vector(3 downto 0);
           y : out std_logic);
end mux161;

architecture mux of mux161 is

begin
    process(s)
    begin
    if(s="0000")then
    y<=x0;
     elsif(s="0001")then
    y<=x1;
      elsif(s="0010")then
    y<=x2;
      elsif(s="0011")then
    y<=x3;
      elsif(s="0100")then
    y<=x4;
      elsif(s="0101")then
    y<=x5;
   elsif(s="0110")then
    y<=x6;
      elsif(s="0111")then
    y<=x7;
      elsif(s="1000")then
    y<=x8;
         elsif(s="1001")then
    y<=x9;
       elsif(s="1010")then
    y<=x10;
    elsif(s="1011")then
    y<=x11;
    elsif(s="1100")then
    y<=x12;
     elsif(s="1101")then
    y<=x13;
   elsif(s="1110")then
          y<=x14;
  else
  y<=x15;
  end if ;
  end process ;
end mux;  